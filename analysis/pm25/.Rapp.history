df2 <- df %>% filter(Variable == "Emissions|Kyoto Gases") %>% group_by(Model, Scenario) %>%#
    summarise(across(`2020`:`2100`, ~ mean(.x, na.rm = TRUE)))
df2
df2 <- df %>% filter(Variable == "Emissions|Kyoto Gases") %>% group_by(Model, Scenario) %>%#
    summarise(across(`2020`:`2100`, ~ sum(.x, na.rm = TRUE)))
df2
df2 <- df %>% filter(Variable == "Emissions|Kyoto Gases") %>% group_by(Model, Scenario) %>%#
    summarise(as.character(seq(2020, 2100, by=5)), ~ sum(.x, na.rm = TRUE))
df2 <- df %>% filter(Variable == "Emissions|Kyoto Gases") %>% group_by(Model, Scenario) %>%#
    summarise(across(as.character(seq(2020, 2100, by=5)), ~ sum(.x, na.rm = TRUE)))
df2
df2 <- df %>% filter(Variable == "Emissions|Kyoto Gases") %>% group_by(Model, Scenario) %>%#
    summarise(across(as.character(seq(2020, 2100, by=5)), ~ sum(.x)))
df2
rowMeans(df2[, -1:-2])
rowMeans(df2[, -1:-2], na.rm=T)
df2$rate <- rowMeans(df2[, -1:-2], na.rm=T)
unique(df$Unit)
unique(df$Variable[df$Unit == "Mt CO2/yr"])
df2 <- df %>% filter(Variable == "Emissions|CO2") %>% group_by(Model, Scenario) %>%#
    summarise(across(as.character(seq(2020, 2100, by=5)), ~ sum(.x)))
df2
df3 <- melt(df2, c('Model', 'Scenario'))
library(reshape2)
df3 <- melt(df2, c('Model', 'Scenario'))
head(df3)
tail(df3)
df3 %>% group_by(Model, Scenario) %>% arrange(variable)
tail(df3 %>% group_by(Model, Scenario) %>% arrange(variable))
subset(df3 %>% group_by(Model, Scenario) %>% arrange(variable), variable == 2085)
df4 <- df3 %>% group_by(Model, Scenario) %>% arrange(variable) %>%#
    reframe(year=variable, value=approx(year, value, year))
approx(df3$variable, df3$value, seq(2050, 2100, by=5))
approx(df3$variable, df3$value, seq(2050, 2100, by=5))df4 <- df3 %>% group_by(Model, Scenario) %>% arrange(variable) %>%#
    reframe(year=variable, value=approx(year, value, year)$y)
df4 <- df3 %>% group_by(Model, Scenario) %>% arrange(variable) %>%#
    reframe(year=variable, value=approx(year, value, year)$y)
df4
subset(df4 %>% group_by(Model, Scenario) %>% arrange(variable), variable == 2085)
subset(df4, year == 2085
)
subset(df3, year == 2085)
subset(df3, variable == 2085)
df4
df5 <- df4 %>% group_by(Model, Scenario) %>% arrange(variable) %>%#
    mutate(cumco2=cumsum(value))
df5 <- df4 %>% group_by(Model, Scenario) %>% arrange(year) %>%#
    mutate(cumco2=cumsum(value))
df5
tail(df5)
unique(df$Variable)[grep("amage", unique(df$Variable))]
head(df %>% filter(Variable == "Macro-Economic Climate Damage|GDP Change"))
tail(df %>% filter(Variable == "Macro-Economic Climate Damage|GDP Change"))
head(df %>% filter(Variable == "Macro-Economic Climate Damage|GDP Change")[,50:100])
head((df %>% filter(Variable == "Macro-Economic Climate Damage|GDP Change"))[,50:100])
head(df %>% filter(Variable == "Macro-Economic Climate Damage|GDP Change"))$Unit
df2b <- df %>% filter(Variable == "Macro-Economic Climate Damage|GDP Change") %>% group_by(Model, Scenario) %>%#
    summarise(across(as.character(seq(2020, 2100, by=5)), ~ sum(.x)))
df2b
df3b <- melt(df2b, c('Model', 'Scenario'))
head(df3b)
unique(df3b$Model)
head(df5)
df5 <- df4 %>% group_by(Model, Scenario) %>% arrange(year) %>%#
    mutate(cumco2=cumsum(value),#
           warming=(1.003 / 2000)*cumco2/1000)
df5
tail(df5)
(1.65 / 1000)*cumco2/1000
1.07 + (1.65)*40
1.07 + (1.65 / 1000)*40
1.07 + (1.65 / 1000)*370
(1.65 / 1000)*370
(1.65 / 1000)*1350
(1.65 / 1000)*360
(1.003 / 2000)*1350
1.07 + (1.003 / 2000)*1350
1.07 + (1.1 / 2000)*1350
1.07 + (1.3 / 2000)*1350
1.07 + (1.35 / 2000)*1350
1.07 + (1.36 / 2000)*1350
1.07 + (1.38 / 2000)*1350
1.07 + (1.38 df5 <- df4 %>% group_by(Model, Scenario) %>% arrange(year) %>%#
    mutate(cumco2=cumsum(value),#
           warming=1.07 + (1.38 / 2000)*cumco2)#
/ 2000)*1350
df5 <- df4 %>% group_by(Model, Scenario) %>% arrange(year) %>%#
    mutate(cumco2=cumsum(value),#
           warming=1.07 + (1.38 / 2000)*cumco2)
tail(df5)
df5 <- df4 %>% group_by(Model, Scenario) %>% arrange(year) %>%#
    mutate(cumco2=cumsum(value),#
           warming=1.07 + (1.38 / 2000)*cumco2/1000)
tail(df5)
df5 <- df4 %>% group_by(Model, Scenario) %>% arrange(year) %>%#
    mutate(cumco2=cumsum(value),#
           warming=1.07 + (1.38 / 2000)*cumco2/1000,#
           damage=1.145*warming^2)
df5
library(ggplot2)
ggplot(df5, aes(cumco2, damage)) +#
    geom_point(aes(colour=Scenario))
ggplot(df5, aes(cumco2, damage))
ggplot(df5, aes(cumco2, damage)) +#
    geom_point()
df5
library(gaia)
? clean_yield
library(reshape2)
?reshape2
?melt.data.frame
? get_example_data
? yield_impact
?margis
?margins
? z_estimate
? output_data
? merge_data
??merge_data
? input_data
? climate_impact
? clean_yield
??merge
gaia::country_id
gaia::co2_historical
library(gaia)
output_dir <- '~/research/reviews/gaia/gaia_output'#
data_dir <- gaia::get_example_data(#
  download_url = 'https://zenodo.org/records/14888816/files/weighted_climate.zip?download=1',#
  data_dir = output_dir#
)#
#
climate_hist_dir <- file.path(data_dir, 'climate_hist')#
# future projected climate#
climate_impact_dir <- file.path(data_dir, 'canesm5')
data_dir <- gaia::get_example_data(#
  download_url = 'https://zenodo.org/records/14888816/files/gaia_example_climate.zip?download=1',#
  data_dir = output_dir#
  )#
#
pr_projection_file <- file.path(data_dir, 'pr_monthly_canesm5_w5e5_ssp245_2015_2030.nc')#
tas_projection_file <- file.path(data_dir, 'tas_monthly_canesm5_w5e5_ssp245_2015_2030.nc')
gaia::yield_impact(#
  pr_hist_ncdf = NULL,                    # path to historical precipitation NetCDF file (must follow ISIMIP format); only if you wish to use your own historical precipitation observation#
  tas_hist_ncdf = NULL,                   # path to historical temperature NetCDF file (must follow ISIMIP format); only if you wish to use your own historical temperature observation#
  pr_proj_ncdf = pr_projection_file,      # path to future projected precipitation NetCDF file (must follow ISIMIP format)#
  tas_proj_ncdf = tas_projection_file,    # path to future projected temperature NetCDF file (must follow ISIMIP format)#
  timestep = 'monthly',                   # specify the time step of the NetCDF data (monthly or daily)#
  climate_hist_dir = climate_hist_dir,    # path to the folder that holds cropland weighted historical climate observations#
  historical_periods = c(1960:2001),      # vector of historical years selected for fitting#
  climate_model = 'canesm5',              # label of climate model name#
  climate_scenario = 'ssp245',            # label of climate scenario name#
  member = 'r1i1p1f1',                    # label of ensemble member name#
  bias_adj = 'w5e5',                      # label of climate data for bias adjustment for the global climate model (GCM)#
  cfe = 'no-cfe',                         # label of CO2 fertilization effect in the formula (default is no CFE)#
  gcam_version = 'gcam7',                 # output is different depending on the GCAM version (gcam6 or gcam7)#
  use_default_coeff = FALSE,              # set to TRUE when there is no historical climate data available#
  base_year = 2015,                       # GCAM base year#
  start_year = 2015,                      # start year of the projected climate data#
  end_year = 2030,                        # end year of the projected climate data#
  smooth_window = 20,                     # number of years as smoothing window#
  co2_hist = NULL,                        # historical annual CO2 concentration. If NULL, will use default value#
  co2_proj = NULL,                        # projected annual CO2 concentration. If NULL, will use default value#
  crop_select = NULL,                     # set to NULL for the default crops#
  diagnostics = TRUE,                     # set to TRUE to output diagnostic plots#
  output_dir = output_dir                 # path to the output folder#
)
library(gaia)#
#
## Data 1#
#
output_dir <- '~/research/reviews/gaia/gaia_output'#
data_dir <- gaia::get_example_data(#
  download_url = 'https://zenodo.org/records/14888816/files/weighted_climate.zip?download=1',#
  data_dir = output_dir#
)#
#
climate_hist_dir <- file.path(data_dir, 'climate_hist')#
# future projected climate#
climate_impact_dir <- file.path(data_dir, 'canesm5')
data_dir <- gaia::get_example_data(#
  download_url = 'https://zenodo.org/records/14888816/files/gaia_example_climate.zip?download=1',#
  data_dir = output_dir#
  )#
#
pr_projection_file <- file.path(data_dir, 'pr_monthly_canesm5_w5e5_ssp245_2015_2030.nc')#
tas_projection_file <- file.path(data_dir, 'tas_monthly_canesm5_w5e5_ssp245_2015_2030.nc')
gaia::yield_impact(#
  pr_hist_ncdf = NULL,                    # path to historical precipitation NetCDF file (must follow ISIMIP format); only if you wish to use your own historical precipitation observation#
  tas_hist_ncdf = NULL,                   # path to historical temperature NetCDF file (must follow ISIMIP format); only if you wish to use your own historical temperature observation#
  pr_proj_ncdf = pr_projection_file,      # path to future projected precipitation NetCDF file (must follow ISIMIP format)#
  tas_proj_ncdf = tas_projection_file,    # path to future projected temperature NetCDF file (must follow ISIMIP format)#
  timestep = 'monthly',                   # specify the time step of the NetCDF data (monthly or daily)#
  climate_hist_dir = climate_hist_dir,    # path to the folder that holds cropland weighted historical climate observations#
  historical_periods = c(1960:2001),      # vector of historical years selected for fitting#
  climate_model = 'canesm5',              # label of climate model name#
  climate_scenario = 'ssp245',            # label of climate scenario name#
  member = 'r1i1p1f1',                    # label of ensemble member name#
  bias_adj = 'w5e5',                      # label of climate data for bias adjustment for the global climate model (GCM)#
  cfe = 'no-cfe',                         # label of CO2 fertilization effect in the formula (default is no CFE)#
  gcam_version = 'gcam7',                 # output is different depending on the GCAM version (gcam6 or gcam7)#
  use_default_coeff = FALSE,              # set to TRUE when there is no historical climate data available#
  base_year = 2015,                       # GCAM base year#
  start_year = 2015,                      # start year of the projected climate data#
  end_year = 2030,                        # end year of the projected climate data#
  smooth_window = 20,                     # number of years as smoothing window#
  co2_hist = NULL,                        # historical annual CO2 concentration. If NULL, will use default value#
  co2_proj = NULL,                        # projected annual CO2 concentration. If NULL, will use default value#
  crop_select = NULL,                     # set to NULL for the default crops#
  diagnostics = TRUE,                     # set to TRUE to output diagnostic plots#
  output_dir = output_dir                 # path to the output folder#
)
?reshape2
library(reshape2)
install.packages("reshape2")
test = list(c(1, 2), 3)
test
lapply(test, print)
lapply(test, function(x) { print("HERE"); print(x)})
yy = lapply(test, function(x) { print("HERE"); print(x)})
length(test)
test[[3]] = c(4, 5)
test
length(list())
rbeta
hist(rbeta(1e5, 1, 1))
hist(rbeta(1e5, 2, 1))
hist(rbeta(1e5, 3, 1))
hist(rbeta(1e5, 4, 1))
hist(rbeta(1e5, 4, .5))
hist(rbeta(1e5, 4, 1))
hist(rbeta(1e5, 2, 1.5))
hist(rbeta(1e5, 1.5, 1))
hist(rbeta(1e5, 1, 1.5))
hist(rbeta(1e5, 1, 4))
hist(rbeta(1e5, 1, 1.5))
hist(rbeta(1e5, 1.5, 1))
hist(rbeta(1e5, 4, 1))
hist(rbeta(1e5, 1, 1.5))
hist(rbeta(1e5, 1.5, 1))
hist(rbeta(1e5, 5*3/10 + 5*.5/10, 5*3/10 + 5*.5/10))
hist(rbeta(1e5, 1 + 5*3/10 + 5*.5/10, 1 + 5*3/10 + 5*.5/10))
hist(rbeta(1e5, 1 + 20*3/10, 1)
)
hist(rbeta(1e5, 1 + 10*3/10, 1 + 10*3/10))
??mvrnorm
include("../../src/main_model.jl")#
#
mcnum = 10000#
#
model = getpage(use_rffsp=true)#
run(model)
library(ggplot2)#
library(reshape2)#
#
#### Construct timeseries#
#
growrate <- 0.02#
df <- data.frame(year=0:30, baseline=exp(growrate*(0:30)))#
#
## Assume 1 C change produces delta log(GDP) = -.01#
#
df$weather.damage <- 0.01 * c(rep(0, 2), 1, rep(0, 28))#
df$climate.damage <- 0.01 * c(rep(0, 2), rep(1, 29))#
#
#### Various models of damage persistence#
#
## Model an income-dependent damage function#
model <- function(yearfunc, damages) {#
    gdppc <- 1#
    for (year in 1:30) {#
        gdppc1 <- yearfunc(year, gdppc[length(gdppc)], damages[df$year == year])#
        if (length(gdppc1) == 0)#
            gdppc1 <- df$baseline[df$year == year]#
        gdppc <- c(gdppc, gdppc1)#
    }#
    gdppc#
}#
#
## Model parameters#
rho.page <- .5#
rho.tipt <- .528#
rho.dh17 <- 0.825#
#
model.back <- function(year, gdppc0, damage) df$baseline[df$year == year] * exp(-damage)#
model.keep <- function(year, gdppc0, damage) gdppc0 * exp(.02 - damage)#
model.page.weather <- function(year, gdppc0, damage) gdppc0 * exp(.02 - rho.page * df$weather.damage[df$year == year - 1]) * exp(df$weather.damage[df$year == year - 1] - damage)#
model.page.climate <- function(year, gdppc0, damage) gdppc0 * exp(.02 - rho.page * df$climate.damage[df$year == year - 1]) * exp(df$climate.damage[df$year == year - 1] - damage)#
model.tipt <- function(year, gdppc0, damage) (rho.tipt*df$baseline[df$year == year-1] + (1 - rho.tipt)*gdppc0) * exp(growrate - damage)#
model.dh17.weather <- function(year, gdppc0, damage) df$baseline[df$year == year-1] * exp(.02 - sum(rev(rho.dh17 ^ (0:year)) * df$weather.damage[1:(year+1)]))#
model.dh17.climate <- function(year, gdppc0, damage) df$baseline[df$year == year-1] * exp(.02 - sum(rev(rho.dh17 ^ (0:year)) * df$climate.damage[1:(year+1)]))#
#
#### Model damages for shocks and step-changes#
#
## Single year shocks#
df$weather.back <- model(model.back, df$weather.damage)#
df$weather.keep <- model(model.keep, df$weather.damage)#
df$weather.page <- model(model.page.weather, df$weather.damage)#
df$weather.tipt <- model(model.tipt, df$weather.damage)#
df$weather.dh17 <- model(model.dh17.weather, df$weather.damage)#
#
## Climate change shocks#
df$climate.back <- model(model.back, df$climate.damage)#
df$climate.keep <- model(model.keep, df$climate.damage)#
df$climate.page <- model(model.page.climate, df$climate.damage)#
df$climate.tipt <- model(model.tipt, df$climate.damage)#
df$climate.dh17 <- model(model.dh17.climate, df$climate.damage)#
#
#### Various models with more sophisticated adaptation#
#
model.30yr.weather <- function(year, gdppc0, damage) gdppc0 * exp(.02 - abs(damage - mean(c(rep(0, 30), df$weather.damage)[which(df$year == year):(which(df$year == year) + 30)])))#
model.30yr.climate <- function(year, gdppc0, damage) gdppc0 * exp(.02 - abs(damage - mean(c(rep(0, 30), df$climate.damage)[which(df$year == year):(which(df$year == year) + 30)])))#
model.kw18.weather <- function(year, gdppc0, damage) df$baseline[df$year == year] * exp((-(df$weather.damage[df$year == year] - df$weather.damage[df$year == year-1]) * 0.0102 / .0161 + -(df$weather.damage[df$year == year-1] - df$weather.damage[df$year == year-2]) * 0.0059 / .0161) * (1 + (-.0024 / .01) * mean(c(rep(0, 30), df$weather.damage)[which(df$year == year):(which(df$year == year) + 30)])))#
model.kw18.climate <- function(year, gdppc0, damage) df$baseline[df$year == year] * exp((-(df$climate.damage[df$year == year] - df$climate.damage[df$year == year-1]) * 0.0102 / .0161 + -(df$climate.damage[df$year == year-1] - df$climate.damage[df$year == year-2]) * 0.0059 / .0161) * (1 + (-.0024 / .01) * mean(c(rep(0, 30), df$climate.damage)[which(df$year == year):(which(df$year == year) + 30)])))#
#
## tt T dT LdT#
## 0 13  0   0#
## 1 14  1   0#
## 2 13 -1   1#
## 3 13  0  -1#
#
kw20.totalloss.13c <- -(-0.00109 * (14 - 13) + -0.000718 * (13 - 13) + -0.00675 * 1)#
model.kw20.weather <- function(year, gdppc0, damage) gdppc0 * exp(.02 + (df$weather.damage[df$year == year] - df$weather.damage[df$year == year-1]) * (0.00641 + -0.00109 * (13 + df$weather.damage[df$year == year])) / kw20.totalloss.13c + (df$weather.damage[df$year == year-1] - df$weather.damage[df$year == year-2]) * (0.00345 + -0.000718 * (13 + df$weather.damage[df$year == year]) / kw20.totalloss.13c) + -0.00675 * df$weather.damage[df$year == year])#
model.kw20.climate <- function(year, gdppc0, damage) gdppc0 * exp(.02 + (df$climate.damage[df$year == year] - df$climate.damage[df$year == year-1]) * (0.00641 + -0.00109 * (13 + df$climate.damage[df$year == year])) / kw20.totalloss.13c + (df$climate.damage[df$year == year-1] - df$climate.damage[df$year == year-2]) * (0.00345 + -0.000718 * (13 + df$climate.damage[df$year == year]) / kw20.totalloss.13c) + -0.00675 * df$climate.damage[df$year == year])#
#
df$weather.30yr <- model(model.30yr.weather, df$weather.damage)#
df$climate.30yr <- model(model.30yr.climate, df$climate.damage)#
df$weather.kw18 <- model(model.kw18.weather, df$weather.damage)#
df$climate.kw18 <- model(model.kw18.climate, df$climate.damage)#
df$weather.kw20 <- model(model.kw20.weather, df$weather.damage)#
df$climate.kw20 <- model(model.kw20.climate, df$climate.damage)#
#
#### Calculate growth rates#
#
df$weather.back.grow <- c(.02, diff(log(df$weather.back)))#
df$weather.keep.grow <- c(.02, diff(log(df$weather.keep)))#
df$weather.page.grow <- c(.02, diff(log(df$weather.page)))#
df$weather.tipt.grow <- c(.02, diff(log(df$weather.tipt)))#
df$weather.30yr.grow <- c(.02, diff(log(df$weather.30yr)))#
df$weather.dh17.grow <- c(.02, diff(log(df$weather.dh17)))#
df$weather.kw18.grow <- c(.02, diff(log(df$weather.kw18)))#
df$weather.kw20.grow <- c(.02, diff(log(df$weather.kw20)))#
df$climate.back.grow <- c(.02, diff(log(df$climate.back)))#
df$climate.keep.grow <- c(.02, diff(log(df$climate.keep)))#
df$climate.page.grow <- c(.02, diff(log(df$climate.page)))#
df$climate.tipt.grow <- c(.02, diff(log(df$climate.tipt)))#
df$climate.30yr.grow <- c(.02, diff(log(df$climate.30yr)))#
df$climate.dh17.grow <- c(.02, diff(log(df$climate.dh17)))#
df$climate.kw18.grow <- c(.02, diff(log(df$climate.kw18)))#
df$climate.kw20.grow <- c(.02, diff(log(df$climate.kw20)))#
#
#### Prepare all data for plotting#
#
df2 <- melt(df, c('year', 'weather.damage', 'climate.damage'), value.name='gdppc', variable.name='group')#
## Drop Dietz#
df2 <- df2[-grep("tipt", df2$group),]#
#
df2$model <- NA#
df2$model[grep("baseline", df2$group)] <- "Baseline"#
df2$model[grep("back", df2$group)] <- "Level effect"#
df2$model[grep("keep", df2$group)] <- "Growth effect"#
df2$model[grep("page", df2$group)] <- "Kikstra et al."#
##df2$model[grep("tipt", df2$group)] <- "Dietz et al."#
df2$model[grep("30yr", df2$group)] <- "Kahn et al."#
df2$model[grep("dh17", df2$group)] <- "Deryugina & Hsiang"#
##df2$model[grep("kw18", df2$group)] <- "Kalkuhl & Wenz"#
df2$model[grep("kw20", df2$group)] <- "Kalkuhl & Wenz"#
##df2$model <- factor(df2$model, c('Baseline', 'Level effect', 'Growth effect', "Kikstra et al.", "Dietz et al.", "Kahn et al.", "Deryugina & Hsiang", "Kalkuhl & Wenz"))#
df2$model <- factor(df2$model, c('Baseline', 'Level effect', 'Growth effect', "Kikstra et al.", "Kahn et al.", "Deryugina & Hsiang", "Kalkuhl & Wenz"))#
#
df2$isweather <- "Permanent shift"#
df2$isweather[grep("weather", df2$group)] <- "One-year shock"#
#
df2$isgrow <- "GDP levels"#
df2$isgrow[grep("grow", df2$group)] <- "Growth rate"#
#
df2.baseline.weather <- df2[df2$group == 'baseline' & df2$year <= 15,]#
df2.baseline.weather$isweather <- 'One-year shock'#
df2.baseline.climate <- df2[df2$group == 'baseline' & df2$year <= 15,]#
df2.baseline.climate$isweather <- 'Permanent shift'
ggplot(subset(df2, year <= 15), aes(year, gdppc, colour=model)) +#
    facet_grid(isgrow ~ isweather, scales='free_y') +#
    geom_line(data=rbind(df2.baseline.weather, df2.baseline.climate), colour='black') +#
    geom_line() + scale_x_continuous(expand=c(0, 0)) +#
    scale_colour_manual(values=c('#808080', '#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#a65628')) +#
theme_bw() + xlab("Year of simulation") + scale_y_continuous("Change in GDP", labels=scales::percent)
df3 <- df2#
df3$gdppc[df3$isgrow == 'GDP levels'] <- df3$gdppc[df3$isgrow == 'GDP levels'] - 1#
#
df3.baseline <- rbind(df2.baseline.weather, df2.baseline.climate)#
df3.baseline$gdppc[df3.baseline$isgrow == 'GDP levels'] <- df3.baseline$gdppc[df3.baseline$isgrow == 'GDP levels'] - 1#
#
ggplot(subset(df3, year <= 15), aes(year, gdppc, colour=model)) +#
    facet_grid(isgrow ~ isweather, scales='free') +#
    geom_line(data=df3.baseline, colour='black') +#
    geom_line() + scale_x_continuous(expand=c(0, 0)) +#
    scale_colour_manual(name=NULL, values=c('#808080', '#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#a65628')) +#
theme_bw() + xlab("Year of simulation") + scale_y_continuous("Change in GDP", labels=scales::percent) +#
    theme(panel.spacing.x=unit(1, 'lines'))
library(dplyr)#
df4 <- df2 %>% left_join(rbind(df2.baseline.weather, df2.baseline.climate), by=c('year', 'isweather', 'isgrow', 'weather.damage', 'climate.damage'), suffix=c('', '.baseline'))#
df4$gdppc[df4$isgrow == 'GDP levels'] <- df4$gdppc[df4$isgrow == 'GDP levels'] / df4$gdppc.baseline[df4$isgrow == 'GDP levels'] - 1#
df4$gdppc[df4$isgrow == 'Growth rate'] <- df4$gdppc[df4$isgrow == 'Growth rate'] - 0.02#
df4$isgrow <- as.character(df4$isgrow)#
df4$isgrow[df4$isgrow == 'Growth rate'] <- "Change in growth rate"#
df4$isgrow[df4$isgrow == 'GDP levels'] <- "Change in GDP p.c. levels"#
df4$gdppc[df4$gdppc < -.07] <- NA # clear these from plot#
#
df5 <- rbind(df4[, c('year', 'gdppc', 'model', 'isgrow', 'isweather')],#
             data.frame(year=c(df2.baseline.weather$year, df2.baseline.climate$year),#
                        gdppc=-c(df2.baseline.weather$weather.damage, df2.baseline.climate$climate.damage),#
                        model='Baseline', isgrow='Impact', isweather=c(df2.baseline.weather$isweather, df2.baseline.climate$isweather)))#
df5$isgrow <- factor(df5$isgrow, levels=c('Impact', 'Change in GDP p.c. levels', 'Change in growth rate'))#
#
ggplot(subset(df5, year <= 15 & (model != 'Baseline' | isgrow == 'Impact')), aes(year, gdppc, colour=model)) +#
    facet_grid(isgrow ~ isweather, scales='free', space="free") +#
    geom_line() + scale_x_continuous(expand=c(0, 0)) +#
    scale_colour_manual(name=NULL, values=c('#808080', '#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#a65628')) +#
theme_bw() + xlab("Year of simulation") + scale_y_continuous("Change from baseline", labels=scales::percent, breaks=(-8:1) / 100) +#
    theme(panel.spacing.x=unit(1, 'lines'))
ggplot(subset(df5, year <= 15 & (model != 'Baseline' | isgrow == 'Impact')), aes(year, gdppc, colour=model)) +#
    facet_grid(isgrow ~ isweather, scales='free') +#
    geom_line() + scale_x_continuous(expand=c(0, 0)) +#
    scale_colour_manual(name=NULL, values=c('#808080', '#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#a65628')) +#
theme_bw() + xlab("Year of simulation") + scale_y_continuous("Change from baseline", labels=scales::percent) +#
    theme(panel.spacing.x=unit(1, 'lines'))
df5
head(df5)
table(df5$isgrow)
unique(df5$Model)
unique(df5$model)
ggplot(subset(df5, year <= 15 & ((model %in% c('Baseline', 'Level effect', 'Growth effect')) | isgrow == 'Impact')), aes(year, gdppc, colour=model)) +#
    facet_grid(isgrow ~ isweather, scales='free') +#
    geom_line() + scale_x_continuous(expand=c(0, 0)) +#
    scale_colour_manual(name=NULL, values=c('#808080', '#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#a65628')) +#
theme_bw() + xlab("Year of simulation") + scale_y_continuous("Change from baseline", labels=scales::percent) +#
    theme(panel.spacing.x=unit(1, 'lines'))
eig
eigen
?eigen
matrix(c(1.42, -.45, 1, 0), 2, 2)
matrix(c(1.42, 1, -.45, 0), 2, 2)
eigen(matrix(c(1.42, 1, -.45, 0), 2, 2))
eigen(matrix(c(1.42, 1, -.45, 0), 2, 2), values.only=T)
eigen(matrix(c(1.42, 1, -.45, 0), 2, 2), only.values=T)
max(eigen(matrix(c(1.42, 1, -.45, 0), 2, 2), only.values=T)$values)
max(eigen(matrix(c(1.413, 1, -.399, 0), 2, 2), only.values=T)$values)
library(lfe)
?felm
ch/iamup2/MimiPAGE2025.jl/analysis/pm25")#
#
library(readxl)
)
""
setwd("~/research/iamup2/MimiPAGE2025.jl/analysis/pm25")#
#
library(readxl)
df = read_xlsx("../data/GAINS/GHGemis_vs_PM25_conc_GAINS_countries_regions_v2.xlsx", sheet=1)
df = read_xlsx("GHGemis_vs_PM25_conc_GAINS_countries_regions_v2.xlsx", sheet=1)
head(df)
library(ggplot2)
df = read.csv("gainssim.csv")
df = read.csv("gainssim.csv")
ggplot(subset(df, IDSCENARIOS == "Baseline"), aes(IDYEARS, PM25_ANTHROP, group=REGION_4LETTER)) +#
    geom_line()
head(df)
df = read.csv("gainssim.csv")
unique(df$REGION_4LETTER_LABEL)
unique(df$REGION_4LETTER_LABEL)[grep("Africa", unique(df$REGION_4LETTER_LABEL))]
df$label <- ifelse(df$REGION_4LETTER_LABEL %in% c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa'),#
                   df$REGION_4LETTER_LABEL, "Other")
ggplot(subset(df, IDSCENARIOS == "Baseline"), aes(IDYEARS, PM25_ANTHROP, group=REGION_4LETTER, colour=label)) +#
    geom_line()
df$label <- ifelse(df$REGION_4LETTER_LABEL %in% c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa'),#
                   df$REGION_4LETTER_LABEL, "Other")#
df$label <- factor(df$label, c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'))#
#
ggplot(subset(df, IDSCENARIOS == "Baseline"), aes(IDYEARS, PM25_ANTHROP, group=REGION_4LETTER, colour=label)) +#
    geom_line() + scale_colour_manual(NULL, values=c('#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#808080'))
ggplot(subset(df, IDSCENARIOS == "Baseline"), aes(IDYEARS, PM25_ANTHROP, group=REGION_4LETTER, colour=label)) +#
    geom_line(data=subset(df, label == 'Other')) +#
    geom_line(data=subset(df, label != 'Other')) +#
    scale_colour_manual(NULL, values=c('#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#808080'))
ggplot(subset(df, IDSCENARIOS == "Baseline"), aes(IDYEARS, PM25_ANTHROP, group=REGION_4LETTER, colour=label)) +#
    geom_line(data=subset(df, IDSCENARIOS == "Baseline" & label == 'Other')) +#
    geom_line(data=subset(df, IDSCENARIOS == "Baseline" & label != 'Other')) +#
    scale_colour_manual(NULL, values=c('#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#808080'))
scenario = 'Baseline'
useekc = F
pagedf <- read.csv(paste0("pmtotal_", scenario, "_", useekc, ".csv"))
pagedf <- read.csv(paste0("pmtotal_", scenario, "_", useekc, ".csv"))
head(pagedf)
mapping <- read.csv("../../data/pollution/GAINS_4letter_regions_mapping.csv")
head(mapping)
library(dplyr)
pagedf2 <- pagedf %>% left_join(mapping, by=c('country'='ISO3')) %>% group_by(REGION_4LETTER, REGION_4LETTER_LABEL) %>%#
            summarize(pm_total=mean(pm_total))
head(pagedf2)
pagedf2 <- pagedf %>% left_join(mapping, by=c('country'='ISO3')) %>% group_by(REGION_4LETTER, REGION_4LETTER_LABEL, time) %>%#
            summarize(pm_total=mean(pm_total))
head(pagedf2)
pagedf2$label <- ifelse(pagedf2$REGION_4LETTER_LABEL %in% c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa'),#
                           pagedf2$REGION_4LETTER_LABEL, "Other")#
        pagedf2$label <- factor(pagedf2$label, c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'))
ggplot(pagedf2, aes(time, pm_total, group=REGION_4LETTER, colour=label)) +#
            geom_line(data=subset(df, IDSCENARIOS == "Baseline" & label == 'Other')) +#
            geom_line(data=subset(df, IDSCENARIOS == "Baseline" & label != 'Other')) +#
            scale_colour_manual(NULL, values=c('#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#808080'))
head(pagedf2)
pagedf2$pm_total
ggplot(pagedf2, aes(time, pm_total, group=REGION_4LETTER, colour=label)) +#
            geom_line(data=subset(df, IDSCENARIOS == "Baseline" & label == 'Other')) +#
            geom_line(data=subset(df, IDSCENARIOS == "Baseline" & label != 'Other')) +#
            scale_colour_manual(NULL, values=c('#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#808080'))
ggplot(pagedf2, aes(time, pm_total, group=REGION_4LETTER, colour=label)) +#
            geom_line(data=subset(pagedf2, IDSCENARIOS == "Baseline" & label == 'Other')) +#
            geom_line(data=subset(pagedf2, IDSCENARIOS == "Baseline" & label != 'Other')) +#
            scale_colour_manual(NULL, values=c('#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#808080'))
ggplot(pagedf2, aes(time, pm_total, group=REGION_4LETTER, colour=label)) +#
            geom_line(data=subset(pagedf2, label == 'Other')) +#
            geom_line(data=subset(pagedf2, label != 'Other')) +#
            scale_colour_manual(NULL, values=c('#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#808080'))
ggplot(subset(pagedf2, time <= 2050), aes(time, pm_total, group=REGION_4LETTER, colour=label)) +#
            geom_line(data=subset(pagedf2, time <= 2050 & label == 'Other')) +#
            geom_line(data=subset(pagedf2, time <= 2050 & label != 'Other')) +#
            scale_colour_manual(NULL, values=c('#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#808080'))
ggplot(subset(df, IDSCENARIOS == "Baseline"), aes(IDYEARS, PM25_ANTHROP, group=REGION_4LETTER, colour=label)) +#
    geom_line(data=subset(df, IDSCENARIOS == "Baseline" & label == 'Other')) +#
    geom_line(data=subset(df, IDSCENARIOS == "Baseline" & label != 'Other')) +#
    scale_colour_manual(NULL, values=c('#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#808080'))
ggplot(subset(df, IDSCENARIOS == "Baseline"), aes(IDYEARS, PM25_ANTHROP, group=REGION_4LETTER, colour=label)) +#
    geom_line(data=subset(df, IDSCENARIOS == "Baseline" & label == 'Other')) +#
    geom_line(data=subset(df, IDSCENARIOS == "Baseline" & label != 'Other')) +#
    scale_colour_manual(NULL, values=c('#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#808080'))
df$label
ggplot(subset(df, IDSCENARIOS == "Baseline"), aes(IDYEARS, PM25_ANTHROP, group=REGION_4LETTER, colour=label)) +#
    geom_line(data=subset(df, IDSCENARIOS == "Baseline" & label == 'Other')) +#
    geom_line(data=subset(df, IDSCENARIOS == "Baseline" & label != 'Other')) +#
    scale_colour_manual(NULL, breaks=c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'),#
                        values=c('#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#808080'))
ggplot(subset(pagedf2, time <= 2050), aes(time, pm_total, group=REGION_4LETTER, colour=label)) +#
            geom_line(data=subset(pagedf2, time <= 2050 & label == 'Other')) +#
            geom_line(data=subset(pagedf2, time <= 2050 & label != 'Other')) +#
            scale_colour_manual(NULL, breaks=c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'),#
                                values=c('#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#808080'))
pagedf <- read.csv(paste0("pmtotal_", scenario, "_", useekc, ".csv"))#
        pagedf2 <- pagedf %>% left_join(mapping, by=c('country'='ISO3')) %>% group_by(REGION_4LETTER, REGION_4LETTER_LABEL, time) %>%#
            summarize(pm_total=mean(pm_total))#
        pagedf2$label <- ifelse(pagedf2$REGION_4LETTER_LABEL %in% c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa'),#
                           pagedf2$REGION_4LETTER_LABEL, "Other")#
        pagedf2$label <- factor(pagedf2$label, c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'))#
#
        ggplot(subset(pagedf2, time <= 2050), aes(time, pm_total, group=REGION_4LETTER, colour=label)) +#
            geom_line(data=subset(pagedf2, time <= 2050 & label == 'Other')) +#
            geom_line(data=subset(pagedf2, time <= 2050 & label != 'Other')) +#
            scale_colour_manual(NULL, breaks=c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'),#
                                values=c('#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#808080'))
getwd()
pagedf <- read.csv(paste0("pmtotal_", scenario, "_", useekc, ".csv"))#
        pagedf2 <- pagedf %>% left_join(mapping, by=c('country'='ISO3')) %>% group_by(REGION_4LETTER, REGION_4LETTER_LABEL, time) %>%#
            summarize(pm_total=mean(pm_total))#
        pagedf2$label <- ifelse(pagedf2$REGION_4LETTER_LABEL %in% c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa'),#
                           pagedf2$REGION_4LETTER_LABEL, "Other")#
        pagedf2$label <- factor(pagedf2$label, c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'))#
#
        ggplot(subset(pagedf2, time <= 2050), aes(time, pm_total, group=REGION_4LETTER, colour=label)) +#
            geom_line(data=subset(pagedf2, time <= 2050 & label == 'Other')) +#
            geom_line(data=subset(pagedf2, time <= 2050 & label != 'Other')) +#
            scale_colour_manual(NULL, breaks=c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'),#
                                values=c('#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#808080'))
pagedf <- read.csv(paste0("pmtotal_", scenario, "_", useekc, ".csv"))#
        pagedf2 <- pagedf %>% left_join(mapping, by=c('country'='ISO3')) %>% group_by(REGION_4LETTER, REGION_4LETTER_LABEL, time) %>%#
            summarize(pm_total=mean(pm_total))#
        pagedf2$label <- ifelse(pagedf2$REGION_4LETTER_LABEL %in% c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa'),#
                           pagedf2$REGION_4LETTER_LABEL, "Other")#
        pagedf2$label <- factor(pagedf2$label, c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'))#
#
        ggplot(subset(pagedf2, time <= 2050), aes(time, pm_total, group=REGION_4LETTER, colour=label)) +#
            geom_line(data=subset(pagedf2, time <= 2050 & label == 'Other')) +#
            geom_line(data=subset(pagedf2, time <= 2050 & label != 'Other')) +#
            scale_colour_manual(NULL, breaks=c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'),#
                                values=c('#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#808080'))
pagedf <- read.csv(paste0("pmtotal_", scenario, "_", useekc, ".csv"))#
        pagedf2 <- pagedf %>% left_join(mapping, by=c('country'='ISO3')) %>% group_by(REGION_4LETTER, REGION_4LETTER_LABEL, time) %>%#
            summarize(pm_total=mean(pm_total))#
        pagedf2$label <- ifelse(pagedf2$REGION_4LETTER_LABEL %in% c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa'),#
                           pagedf2$REGION_4LETTER_LABEL, "Other")#
        pagedf2$label <- factor(pagedf2$label, c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'))#
#
        ggplot(subset(pagedf2, time <= 2050), aes(time, pm_total, group=REGION_4LETTER, colour=label)) +#
            geom_line(data=subset(pagedf2, time <= 2050 & label == 'Other')) +#
            geom_line(data=subset(pagedf2, time <= 2050 & label != 'Other')) +#
            scale_colour_manual(NULL, breaks=c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'),#
                                values=c('#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#808080'))
ggplot(subset(df, IDSCENARIOS == "Baseline"), aes(IDYEARS, PM25_ANTHROP, group=REGION_4LETTER, colour=label)) +#
    geom_line(data=subset(df, IDSCENARIOS == "Baseline" & label == 'Other')) +#
    geom_line(data=subset(df, IDSCENARIOS == "Baseline" & label != 'Other')) +#
    scale_colour_manual(NULL, breaks=c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'),#
                        values=c('#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#808080'))
ggplot(subset(df, IDSCENARIOS == "Baseline"), aes(IDYEARS, PM25_ANTHROP, group=REGION_4LETTER, colour=label)) +#
    geom_line(data=subset(df, IDSCENARIOS == "Baseline" & label == 'Other')) +#
    geom_line(data=subset(df, IDSCENARIOS == "Baseline" & label != 'Other')) +#
    scale_colour_manual(NULL, breaks=c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'),#
                        values=c('#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#80808020'))
ggplot(subset(df, IDSCENARIOS == "Baseline"), aes(IDYEARS, PM25_ANTHROP, group=REGION_4LETTER, colour=label)) +#
    geom_line(data=subset(df, IDSCENARIOS == "Baseline" & label == 'Other')) +#
    geom_line(data=subset(df, IDSCENARIOS == "Baseline" & label != 'Other')) +#
    scale_colour_manual(NULL, breaks=c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'),#
                        values=c('#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#80808020')) +#
    theme_bw()
ggplot(subset(df, IDSCENARIOS == "Baseline"), aes(IDYEARS, PM25_ANTHROP, group=REGION_4LETTER, colour=label)) +#
    geom_line(data=subset(df, IDSCENARIOS == "Baseline" & label == 'Other')) +#
    geom_line(data=subset(df, IDSCENARIOS == "Baseline" & label != 'Other')) +#
    scale_colour_manual(NULL, breaks=c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'),#
                        values=c('#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#80808040')) +#
    theme_bw()
ggplot(subset(df, IDSCENARIOS == "Baseline"), aes(IDYEARS, PM25_ANTHROP, group=REGION_4LETTER, colour=label)) +#
    geom_line(data=subset(df, IDSCENARIOS == "Baseline" & label == 'Other')) +#
    geom_line(data=subset(df, IDSCENARIOS == "Baseline" & label != 'Other')) +#
    scale_colour_manual(NULL, breaks=c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'),#
                        values=c('#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#80808030')) +#
    theme_bw()
ggplot(subset(df, IDSCENARIOS == "Baseline"), aes(IDYEARS, PM25_ANTHROP, group=REGION_4LETTER, colour=label)) +#
    geom_line(data=subset(df, IDSCENARIOS == "Baseline" & label == 'Other')) +#
    geom_line(data=subset(df, IDSCENARIOS == "Baseline" & label != 'Other')) +#
    scale_colour_manual(NULL, breaks=c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'),#
                        values=c('#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#80808030')) +#
    theme_bw() + scale_y_log10()
ggplot(subset(pagedf2, time <= 2050), aes(time, pm_total, group=REGION_4LETTER, colour=label)) +#
            geom_line(data=subset(pagedf2, time <= 2050 & label == 'Other')) +#
            geom_line(data=subset(pagedf2, time <= 2050 & label != 'Other')) +#
            scale_colour_manual(NULL, breaks=c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'),#
                        values=c('#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#80808030')) +#
            theme_bw() + scale_y_log10()
scenario
useekc
ggplot(subset(df, IDSCENARIOS == "Baseline"), aes(IDYEARS, PM25_ANTHROP, group=REGION_4LETTER, colour=label)) +#
    geom_line(data=subset(df, IDSCENARIOS == "Baseline" & label == 'Other')) +#
    geom_line(data=subset(df, IDSCENARIOS == "Baseline" & label != 'Other')) +#
    scale_colour_manual(NULL, breaks=c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'),#
                        values=c('#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#80808030')) +#
    theme_bw() + scale_y_log10()
pagedf <- read.csv(paste0("pmtotal_", scenario, "_", useekc, ".csv"))#
        pagedf2 <- pagedf %>% left_join(mapping, by=c('country'='ISO3')) %>% group_by(REGION_4LETTER, REGION_4LETTER_LABEL, time) %>%#
            summarize(pm_total=mean(pm_total))#
        pagedf2$label <- ifelse(pagedf2$REGION_4LETTER_LABEL %in% c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa'),#
                           pagedf2$REGION_4LETTER_LABEL, "Other")#
        pagedf2$label <- factor(pagedf2$label, c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'))#
#
        ggplot(subset(pagedf2, time <= 2050), aes(time, pm_total, group=REGION_4LETTER, colour=label)) +#
            geom_line(data=subset(pagedf2, time <= 2050 & label == 'Other')) +#
            geom_line(data=subset(pagedf2, time <= 2050 & label != 'Other')) +#
            scale_colour_manual(NULL, breaks=c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'),#
                        values=c('#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#80808030')) +#
            theme_bw() + scale_y_log10()
model = getpage(pm25_scenario=:Baseline, pm25_useekc=false)
pagedf <- read.csv(paste0("pmtotal_", scenario, "_", useekc, ".csv"))#
        pagedf2 <- pagedf %>% left_join(mapping, by=c('country'='ISO3')) %>% group_by(REGION_4LETTER, REGION_4LETTER_LABEL, time) %>%#
            summarize(pm_total=mean(pm_total))#
        pagedf2$label <- ifelse(pagedf2$REGION_4LETTER_LABEL %in% c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa'),#
                           pagedf2$REGION_4LETTER_LABEL, "Other")#
        pagedf2$label <- factor(pagedf2$label, c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'))#
#
        ggplot(subset(pagedf2, time <= 2050), aes(time, pm_total, group=REGION_4LETTER, colour=label)) +#
            geom_line(data=subset(pagedf2, time <= 2050 & label == 'Other')) +#
            geom_line(data=subset(pagedf2, time <= 2050 & label != 'Other')) +#
            scale_colour_manual(NULL, breaks=c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'),#
                        values=c('#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#80808030')) +#
            theme_bw() + scale_y_log10()
ggplot(subset(df, IDSCENARIOS == "Baseline"), aes(IDYEARS, PM25_ANTHROP, group=REGION_4LETTER, colour=label)) +#
    geom_line(data=subset(df, IDSCENARIOS == "Baseline" & label == 'Other')) +#
    geom_line(data=subset(df, IDSCENARIOS == "Baseline" & label != 'Other')) +#
    scale_colour_manual(NULL, breaks=c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'),#
                        values=c('#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#80808030')) +#
    theme_bw() + scale_y_log10()
pagedf <- read.csv(paste0("pmtotal_", scenario, "_", useekc, ".csv"))#
        pagedf2 <- pagedf %>% left_join(mapping, by=c('country'='ISO3')) %>% group_by(REGION_4LETTER, REGION_4LETTER_LABEL, time) %>%#
            summarize(pm_total=mean(pm_total))#
        pagedf2$label <- ifelse(pagedf2$REGION_4LETTER_LABEL %in% c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa'),#
                           pagedf2$REGION_4LETTER_LABEL, "Other")#
        pagedf2$label <- factor(pagedf2$label, c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'))#
#
        ggplot(subset(pagedf2, time <= 2050), aes(time, pm_total, group=REGION_4LETTER, colour=label)) +#
            geom_line(data=subset(pagedf2, time <= 2050 & label == 'Other')) +#
            geom_line(data=subset(pagedf2, time <= 2050 & label != 'Other')) +#
            scale_colour_manual(NULL, breaks=c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'),#
                        values=c('#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#80808030')) +#
            theme_bw() + scale_y_log10()
ggplot(subset(df, IDSCENARIOS == "Baseline"), aes(IDYEARS, PM25_ANTHROP, group=REGION_4LETTER, colour=label)) +#
    geom_line(data=subset(df, IDSCENARIOS == "Baseline" & label == 'Other')) +#
    geom_line(data=subset(df, IDSCENARIOS == "Baseline" & label != 'Other')) +#
    scale_colour_manual(NULL, breaks=c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'),#
                        values=c('#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#80808030')) +#
    theme_bw() + scale_y_log10()
pagedf <- read.csv(paste0("pmtotal_", scenario, "_", useekc, ".csv"))#
        pagedf2 <- pagedf %>% left_join(mapping, by=c('country'='ISO3')) %>% group_by(REGION_4LETTER, REGION_4LETTER_LABEL, time) %>%#
            summarize(pm_total=mean(pm_total))#
        pagedf2$label <- ifelse(pagedf2$REGION_4LETTER_LABEL %in% c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa'),#
                           pagedf2$REGION_4LETTER_LABEL, "Other")#
        pagedf2$label <- factor(pagedf2$label, c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'))#
#
        ggplot(subset(pagedf2, time <= 2050), aes(time, pm_total, group=REGION_4LETTER, colour=label)) +#
            geom_line(data=subset(pagedf2, time <= 2050 & label == 'Other')) +#
            geom_line(data=subset(pagedf2, time <= 2050 & label != 'Other')) +#
            scale_colour_manual(NULL, breaks=c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'),#
                        values=c('#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#80808030')) +#
            theme_bw() + scale_y_log10()
ggplot(subset(df, IDSCENARIOS == "Baseline"), aes(IDYEARS, PM25_ANTHROP, group=REGION_4LETTER, colour=label)) +#
    geom_line(data=subset(df, IDSCENARIOS == "Baseline" & label == 'Other')) +#
    geom_line(data=subset(df, IDSCENARIOS == "Baseline" & label != 'Other')) +#
    scale_colour_manual(NULL, breaks=c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'),#
                        values=c('#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#80808030')) +#
    theme_bw() + scale_y_log10()
ggplot(subset(df, IDSCENARIOS == "Baseline"), aes(IDYEARS, PM25_ANTHROP, group=REGION_4LETTER, colour=label)) +#
    geom_line(data=subset(df, IDSCENARIOS == "Baseline" & label == 'Other')) +#
    geom_line(data=subset(df, IDSCENARIOS == "Baseline" & label != 'Other')) +#
    scale_colour_manual(NULL, breaks=c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'),#
                        values=c('#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#80808030')) +#
    theme_bw() + scale_y_log10()
ggplot(subset(df, IDSCENARIOS == "Baseline"), aes(IDYEARS, PM25_ANTHROP, group=REGION_4LETTER, colour=label)) +#
    geom_line(data=subset(df, IDSCENARIOS == "Baseline" & label == 'Other')) +#
    geom_line(data=subset(df, IDSCENARIOS == "Baseline" & label != 'Other')) +#
    scale_colour_manual(NULL, breaks=c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'),#
                        values=c('#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#80808030')) +#
    theme_bw() + scale_y_log10(NULL) + ylab("Anthropogenic PM2.5 (um/m3)")
ggplot(subset(df, IDSCENARIOS == "Baseline"), aes(IDYEARS, PM25_ANTHROP, group=REGION_4LETTER, colour=label)) +#
    geom_line(data=subset(df, IDSCENARIOS == "Baseline" & label == 'Other')) +#
    geom_line(data=subset(df, IDSCENARIOS == "Baseline" & label != 'Other')) +#
    scale_colour_manual(NULL, breaks=c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'),#
                        values=c('#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#80808030')) +#
    theme_bw() + scale_y_log10("Anthropogenic PM2.5 (um/m3)") + xlab(NULL)
scenario
useekc
pagedf <- read.csv(paste0("pmtotal_", scenario, "_", useekc, ".csv"))#
        pagedf2 <- pagedf %>% left_join(mapping, by=c('country'='ISO3')) %>% group_by(REGION_4LETTER, REGION_4LETTER_LABEL, time) %>%#
            summarize(pm_total=mean(pm_total))#
        pagedf2$label <- ifelse(pagedf2$REGION_4LETTER_LABEL %in% c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa'),#
                           pagedf2$REGION_4LETTER_LABEL, "Other")#
        pagedf2$label <- factor(pagedf2$label, c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'))#
#
        ggplot(subset(pagedf2, time <= 2050), aes(time, pm_total, group=REGION_4LETTER, colour=label)) +#
            geom_line(data=subset(pagedf2, time <= 2050 & label == 'Other')) +#
            geom_line(data=subset(pagedf2, time <= 2050 & label != 'Other')) +#
            scale_colour_manual(NULL, breaks=c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'),#
                        values=c('#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#80808030')) +#
            theme_bw() + scale_y_log10()
useekc = T
pagedf <- read.csv(paste0("pmtotal_", scenario, "_", useekc, ".csv"))#
        pagedf2 <- pagedf %>% left_join(mapping, by=c('country'='ISO3')) %>% group_by(REGION_4LETTER, REGION_4LETTER_LABEL, time) %>%#
            summarize(pm_total=mean(pm_total))#
        pagedf2$label <- ifelse(pagedf2$REGION_4LETTER_LABEL %in% c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa'),#
                           pagedf2$REGION_4LETTER_LABEL, "Other")#
        pagedf2$label <- factor(pagedf2$label, c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'))#
#
        ggplot(subset(pagedf2, time <= 2050), aes(time, pm_total, group=REGION_4LETTER, colour=label)) +#
            geom_line(data=subset(pagedf2, time <= 2050 & label == 'Other')) +#
            geom_line(data=subset(pagedf2, time <= 2050 & label != 'Other')) +#
            scale_colour_manual(NULL, breaks=c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'),#
                        values=c('#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#80808030')) +#
            theme_bw() + scale_y_log10()
pagedf <- read.csv(paste0("pmtotal_", scenario, "_", useekc, ".csv"))#
        pagedf2 <- pagedf %>% left_join(mapping, by=c('country'='ISO3')) %>% group_by(REGION_4LETTER, REGION_4LETTER_LABEL, time) %>%#
            summarize(pm_total=mean(pm_total))#
        pagedf2$label <- ifelse(pagedf2$REGION_4LETTER_LABEL %in% c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa'),#
                           pagedf2$REGION_4LETTER_LABEL, "Other")#
        pagedf2$label <- factor(pagedf2$label, c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'))#
#
        ggplot(subset(pagedf2, time <= 2050), aes(time, pm_total, group=REGION_4LETTER, colour=label)) +#
            geom_line(data=subset(pagedf2, time <= 2050 & label == 'Other')) +#
            geom_line(data=subset(pagedf2, time <= 2050 & label != 'Other')) +#
            scale_colour_manual(NULL, breaks=c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'),#
                        values=c('#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#80808030')) +#
            theme_bw() + scale_y_log10("Anthropogenic PM2.5 (um/m3)") + xlab(NULL)
useekc = F
pagedf <- read.csv(paste0("pmtotal_", scenario, "_", useekc, ".csv"))#
        pagedf2 <- pagedf %>% left_join(mapping, by=c('country'='ISO3')) %>% group_by(REGION_4LETTER, REGION_4LETTER_LABEL, time) %>%#
            summarize(pm_total=mean(pm_total))#
        pagedf2$label <- ifelse(pagedf2$REGION_4LETTER_LABEL %in% c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa'),#
                           pagedf2$REGION_4LETTER_LABEL, "Other")#
        pagedf2$label <- factor(pagedf2$label, c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'))#
#
        ggplot(subset(pagedf2, time <= 2050), aes(time, pm_total, group=REGION_4LETTER, colour=label)) +#
            geom_line(data=subset(pagedf2, time <= 2050 & label == 'Other')) +#
            geom_line(data=subset(pagedf2, time <= 2050 & label != 'Other')) +#
            scale_colour_manual(NULL, breaks=c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'),#
                        values=c('#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#80808030')) +#
            theme_bw() + scale_y_log10("Anthropogenic PM2.5 (um/m3)") + xlab(NULL)
ggplot(rbind(subset(df, IDSCENARIOS == "Baseline" & IDYEARS < 2030), subset(df, IDSCENARIOS == "Decarb" & IDYEARS >= 2030)),#
       aes(IDYEARS, PM25_ANTHROP, group=REGION_4LETTER, colour=label)) +#
    geom_line(data=subset(df, IDSCENARIOS == "Baseline" & label == 'Other')) +#
    geom_line(data=subset(df, IDSCENARIOS == "Baseline" & label != 'Other')) +#
    scale_colour_manual(NULL, breaks=c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'),#
                        values=c('#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#80808030')) +#
    theme_bw() + scale_y_log10("Anthropogenic PM2.5 (um/m3)") + xlab(NULL)
scendf <- rbind(subset(df, IDSCENARIOS == "Baseline" & IDYEARS < 2030), subset(df, IDSCENARIOS == "Decarb" & IDYEARS >= 2030))#
ggplot(scendf, aes(IDYEARS, PM25_ANTHROP, group=REGION_4LETTER, colour=label)) +#
    geom_line(data=subset(scendf, label == 'Other')) +#
    geom_line(data=subset(scendf, label != 'Other')) +#
    scale_colour_manual(NULL, breaks=c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'),#
                        values=c('#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#80808030')) +#
    theme_bw() + scale_y_log10("Anthropogenic PM2.5 (um/m3)") + xlab(NULL)
scenario = "Decarb"
useekc = F
pagedf <- read.csv(paste0("pmtotal_", scenario, "_", useekc, ".csv"))#
        pagedf2 <- pagedf %>% left_join(mapping, by=c('country'='ISO3')) %>% group_by(REGION_4LETTER, REGION_4LETTER_LABEL, time) %>%#
            summarize(pm_total=mean(pm_total))#
        pagedf2$label <- ifelse(pagedf2$REGION_4LETTER_LABEL %in% c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa'),#
                           pagedf2$REGION_4LETTER_LABEL, "Other")#
        pagedf2$label <- factor(pagedf2$label, c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'))#
#
        ggplot(subset(pagedf2, time <= 2050), aes(time, pm_total, group=REGION_4LETTER, colour=label)) +#
            geom_line(data=subset(pagedf2, time <= 2050 & label == 'Other')) +#
            geom_line(data=subset(pagedf2, time <= 2050 & label != 'Other')) +#
            scale_colour_manual(NULL, breaks=c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'),#
                        values=c('#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#80808030')) +#
            theme_bw() + scale_y_log10("Anthropogenic PM2.5 (um/m3)") + xlab(NULL)
useekc = T
pagedf <- read.csv(paste0("pmtotal_", scenario, "_", useekc, ".csv"))#
        pagedf2 <- pagedf %>% left_join(mapping, by=c('country'='ISO3')) %>% group_by(REGION_4LETTER, REGION_4LETTER_LABEL, time) %>%#
            summarize(pm_total=mean(pm_total))#
        pagedf2$label <- ifelse(pagedf2$REGION_4LETTER_LABEL %in% c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa'),#
                           pagedf2$REGION_4LETTER_LABEL, "Other")#
        pagedf2$label <- factor(pagedf2$label, c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'))#
#
        ggplot(subset(pagedf2, time <= 2050), aes(time, pm_total, group=REGION_4LETTER, colour=label)) +#
            geom_line(data=subset(pagedf2, time <= 2050 & label == 'Other')) +#
            geom_line(data=subset(pagedf2, time <= 2050 & label != 'Other')) +#
            scale_colour_manual(NULL, breaks=c('United States of America', 'China', 'Austria', 'Russian Federation', 'Central America', 'Remaining Southern Africa', 'Other'),#
                        values=c('#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#80808030')) +#
            theme_bw() + scale_y_log10("Anthropogenic PM2.5 (um/m3)") + xlab(NULL)
